/*! mongo-shell-data-generator - v1.0.5 - 2015-11-10
* https://github.com/PureMilllk/Mongo-Shell-data-generator#readme
* Copyright (c) 2015 ; Licensed  */

(function(){}).call(this),function(){function Init(){this.args=function(a){return[].slice.call(a[0])}(arguments),this.count=10}Init.prototype.style=function(){arguments.length?(localargs=[].slice.call(arguments),function(a,b,c){function randomDate(a,b){return new Date(a.getTime()+Math.random()*(b.getTime()-a.getTime()))}function isEmpty(a){if(null==a)return!0;if(a.length>0)return!1;if(0===a.length)return!0;for(var b in a)if(Object.prototype.hasOwnProperty.call(a,b))return!1;return!0}function randomString(){for(var a="",b="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz",c=0;7>c;c++)a+=b.charAt(Math.floor(Math.random()*b.length));return a}function randomNumber(){return arguments.length?Math.floor(Math.random()*(1+arguments[0])):Math.floor(101*Math.random())}function randomBool(){return[!0,!1][Math.floor(2*Math.random())]}function randomName(){var a=["Nickolas","Ramon","Lou","Luciano","Mickey","Silas","Michael","Charles","Eusebio","Boyce","Martin","Rosendo","Val","Marcus","Berry","Lyndon","Chung","Kenton","Jackie","Tyron","Reid","Herb","Felipe","Lyle","Lowell","Salvador","Enrique","Hosea","Micheal","Rhett","Denver","Jimmy","Frederick","Otha","Anibal","Warren","Andre","Jim","Weldon","Blaine","Mariano","Gavin","Raymon","Jarrod","Nicolas","Minh","Justin","Johnny","Felix","Barry"],b=["Estefana","Danyel","Leonora","Velva","Celia","Cindie","Florine","Misty","Penny","Rosemarie","Creola","Nada","Carri","Lashanda","Letha","Aracelis","Arletta","Sherley","Herlinda","Pura","Gwyn","Carisa","Charmaine","Krishna","Katie","Dia","Bobbi","Criselda","Tamie","Azalee","Opal","Lyndsey","Paulita","Saran","Raylene","Corine","Jeanette","Delta","Despina","Sharonda","Claretta","Kacie","Toni","Elisabeth","Katherina","Elke","Tamala","Joy","Shandi","Devora"];return arguments.length?"m"===arguments[0]?a[Math.floor(50*Math.random())]:"f"===arguments[0]?b[Math.floor(50*Math.random())]:a.concat(b)[Math.floor(100*Math.random())]:a.concat(b)[Math.floor(100*Math.random())]}switch(!0){case"default"===a[0]:for(i=1;i<=c;i++)db[b].insert({address:{building:Math.floor(10001*Math.random()),coord:[-(100000001*Math.random()/1e6).toFixed(6),(100000001*Math.random()/1e6).toFixed(6)],street:["East","South","West","North"][Math.floor(4*Math.random())]+" "+Math.floor(101*Math.random())+" Street",zipcode:Math.floor(10001*Math.random())},borough:["Manhattan","Brooklyn","Queens","Staten","Bronx"][Math.floor(5*Math.random())],cuisine:["Bakery","Hamburgers","Irish","American","Jewish","Delicatessen","Ice","Chinese","Chicken","Turkish","Caribbean","Donuts","Sandwiches"][Math.floor(13*Math.random())],grades:[{date:{date:randomDate(new Date(2e3,0,1),new Date).getTime()},grade:"ABCD"[Math.floor(4*Math.random())],score:Math.floor(11*Math.random())},{date:{date:randomDate(new Date(2e3,0,1),new Date).getTime()},grade:"ABCD"[Math.floor(4*Math.random())],score:Math.floor(11*Math.random())},{date:{date:randomDate(new Date(2e3,0,1),new Date).getTime()},grade:"ABCD"[Math.floor(4*Math.random())],score:Math.floor(11*Math.random())},{date:{date:randomDate(new Date(2e3,0,1),new Date).getTime()},grade:"ABCD"[Math.floor(4*Math.random())],score:Math.floor(11*Math.random())},{date:{date:randomDate(new Date(2e3,0,1),new Date).getTime()},grade:"ABCD"[Math.floor(4*Math.random())],score:Math.floor(11*Math.random())}],name:["Morris","Wendy","Riviera","Tov","Brunos","Kosher","Wilken","Regina","Taste","Wild","Seuda","Carvel","Nordic","Glorious","The","Sal","Bully","Steve","Harriet","Angelika"][Math.floor(20*Math.random())]+" Shop",restaurant_id:String(Math.floor(3e7*Math.random()))});print("\nAwesome ~ Generated "+c+" default test data\nUse db[collection].find().pretty(); to view :)\n");break;case"object"==typeof a[0]&&!Array.isArray(a[0])&&!isEmpty(a[0]):for(z=1;z<=c;z++){var result={},nestStack=[],reachEnd=!1,digitReg=/^d\d*/,nameReg=/^n,[mf]/;!function(obj,nest){var arr=[];for(var i in obj)arr.push(i);for(var j=0;j<arr.length;j++){if("s"===obj[arr[j]])nest&&!reachEnd?eval('result["'+nestStack.join('"]["')+'"]["'+arr[j]+'"] = randomString()'):nest&&reachEnd?(nestStack.pop(),1!==nestStack.length?eval('result["'+nestStack.join('"]["')+'"]["'+arr[j]+'"] = randomString()'):eval('result["'+nestStack[0]+'"]["'+arr[j]+'"] = randomString()')):result[arr[j]]=randomString();else if(Array.isArray(obj[arr[j]])||"object"==typeof obj[arr[j]]||"d"!==obj[arr[j]]&&!digitReg.test(obj[arr[j]].toString()))if("b"===obj[arr[j]])nest&&!reachEnd?eval('result["'+nestStack.join('"]["')+'"]["'+arr[j]+'"] = randomBool()'):nest&&reachEnd?(nestStack.pop(),1!==nestStack.length?eval('result["'+nestStack.join('"]["')+'"]["'+arr[j]+'"] = randomBool()'):eval('result["'+nestStack[0]+'"]["'+arr[j]+'"] = randomBool()')):result[arr[j]]=randomBool();else if(Array.isArray(obj[arr[j]])||"object"==typeof obj[arr[j]]||"n"!==obj[arr[j]]&&!nameReg.test(obj[arr[j]].toString()))"object"!=typeof obj[arr[j]]||Array.isArray(obj[arr[j]])||isEmpty(obj[arr[j]])?"object"==typeof obj[arr[j]]&&Array.isArray(obj[arr[j]])&&obj[arr[j]].length?(nest?eval('result["'+nestStack.join('"]["')+'"]["'+arr[j]+'"] = []'):result[arr[j]]=[],nestStack.push(arr[j]),arguments.callee(obj[arr[j]],arr[j])):print("\nOops, Wrong input, Plz check the documentation\nOr try gen_Init[collection].style('default'); to get the default testing data :)\n "):(nest?eval('result["'+nestStack.join('"]["')+'"]["'+arr[j]+'"] = {}'):result[arr[j]]={},nestStack.push(arr[j]),arguments.callee(obj[arr[j]],arr[j]));else{var randomNameResult;if("n"!==obj[arr[j]]&&obj[arr[j]].toString().match(nameReg).length){var match=obj[arr[j]].toString().match(digitReg);randomNameResult=match.length?"n,m"===match[0]?randomName("m"):"n,f"===match[0]?randomName("f"):randomName():randomName()}else randomNameResult=randomName();nest&&!reachEnd?eval('result["'+nestStack.join('"]["')+'"]["'+arr[j]+'"] = randomNameResult'):nest&&reachEnd?(nestStack.pop(),1!==nestStack.length?eval('result["'+nestStack.join('"]["')+'"]["'+arr[j]+'"] = randomNameResult'):eval('result["'+nestStack[0]+'"]["'+arr[j]+'"] = randomNameResult')):result[arr[j]]=randomNameResult}else{var randomDigitResult;if("d"!==obj[arr[j]]&&obj[arr[j]].toString().match(digitReg).length){var match=obj[arr[j]].toString().match(digitReg);match.length?(match[0].substr(1,match.length),randomDigitResult=randomNumber(Number(match[0]))):randomDigitResult=randomNumber()}else randomDigitResult=randomNumber();nest&&!reachEnd?eval('result["'+nestStack.join('"]["')+'"]["'+arr[j]+'"] = randomDigitResult'):nest&&reachEnd?(nestStack.pop(),1!==nestStack.length?eval('result["'+nestStack.join('"]["')+'"]["'+arr[j]+'"] = randomDigitResult'):eval('result["'+nestStack[0]+'"]["'+arr[j]+'"] = randomDigitResult')):result[arr[j]]=randomDigitResult}j==arr.length-1?(reachEnd=!0,nestStack.pop()):reachEnd=!1}}(a[0]),void 0===this.module.exports&&db[b].insert(result)}print("\nAwesome ~ Generated "+c+" default test data\nUse db[collection].find().pretty(); to view :)\n");break;default:print("\nOops, Wrong input, Plz check the documentation\nOr try gen_Init[collection].style('default'); to get the default testing data :)\n ")}}(localargs,this.args,this.count)):print("You can define some options or use gen_Init(...).style('default')")},Init.prototype.total=function(a){return this.count=a,this},this.gen_Init=function(){return new Init(arguments)}}.call(this);
//# sourceMappingURL=mongo-shell-data-generator.min.js.map